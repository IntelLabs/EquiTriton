[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools <= 69.5.1"]

[project]
authors = [
  {"name" = "Intel Corporation", "email" = "none@xyz.com"},
]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dependencies = [
  "psutil",
  "triton",
  "torch",
  "e3nn",
  "tqdm",
  "matplotlib"
]
description = "Triton-lang implementations of kernels for equivariant neural networks."
dynamic = ["version", "readme"]
keywords = ["performance", "portability", "triton", "equivariance", "graph", "neural", "networks"]
license = {file = "LICENSE.md"}
name = "equitriton"
requires-python = ">=3.10"

[project.optional-dependencies]
dev = [
  "pre-commit",
  "pytest",
  "pytest-pretty",
  "jupyter"
]
train = [
  "torch-geometric",
  "torch-scatter",
  "torch-sparse",
  "torch-cluster",
  "pytorch-lightning==2.4.0",
  "jsonargparse[signatures]"
]

[tool.setuptools.dynamic]
readme = {file = ["README.md"]}
version = {attr = "equitriton.__version__"}

[tool.ruff.lint]
# ignore E741 because simple symbols like l are appropriate
ignore = ["F403", "F405", "E741"]

[tool.semantic_release]
assets = []
build_command_env = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
no_git_verify = false
tag_format = "v{version}"

[tool.semantic_release.branches.main]
match = "main"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
default_bump_level = 0
